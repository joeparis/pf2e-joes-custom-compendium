name: Release Creation

on:
  release:
    types: [published]

permissions:
  contents: write

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4

      - name: Extract tag version number
        id: get-version
        run: echo "version=${GITHUB_REF_NAME}" >> "$GITHUB_OUTPUT"

      - name: Get Module JSON
        id: set_var
        run: |
          echo "PACKAGE_JSON=$(jq -c . < module.json)" >> $GITHUB_OUTPUT
      - name: Get Module Title
        id: title
        run: echo "title=${{ fromJson(steps.set_var.outputs.PACKAGE_JSON).title }}" >> "$GITHUB_OUTPUT"

      # Substitute the Manifest and Download URLs in the `module.json`.
      - name: Substitute Manifest and Download Links For Versioned Ones
        id: sub_manifest_link_version
        uses: devops-actions/variable-substitution@v1.2
        with:
          files: module.json
        env:
          version: ${{ steps.get-version.outputs.version }}
          manifest: https://github.com/${{ github.repository }}/releases/latest/download/module.json
          download: https://github.com/${{ github.repository }}/releases/download/${{ github.event.release.tag_name }}/module.zip

      # Create a folder containing all the module stuff and zip it for the release
      - name: Create Zip
        run: zip -r9 ./module.zip module.json assets/ packs/ scripts/ LICENSE README.md

      - name: Update Release with Files
        id: create_version_release
        uses: ncipollo/release-action@v1
        with:
          token: ${{ secrets.GITHUB_TOKEN }}
          allowUpdates: true
          omitDraftDuringUpdate: true
          omitPrereleaseDuringUpdate: true
          name: ${{ steps.get-version.outputs.version }}
          body: ${{ steps.changelog.outputs.release-notes }}
          artifacts: './module.json, ./module.zip'
